name: Jaymar921 auto commit - 2

on:
  schedule:
    - cron: "*/2 * * * *" # Run every 2 minutes

jobs:
  commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Ensure full history is available

      - name: Switch to main branch
        run: git checkout main

      - name: Loop Commit Updates
        run: |
          set -e
          
          FILE=".github/FILE.md"
          COMMIT_LOOP_COUNT=50

          echo "Configuring Git..."
          git config --global user.name "$USERNAME"
          git config --global user.email "$EMAIL"

          echo "Ensuring clean working directory..."
          git reset --hard origin/main  # Force sync to remote state

          for ((i=1; i<=COMMIT_LOOP_COUNT; i++)); do
            echo "Iteration $i of $COMMIT_LOOP_COUNT"

            echo "Checking for file: $FILE"
            if [ ! -f "$FILE" ]; then
              echo "File not found, creating $FILE..."
              echo "# Git Auto Commit | Hidden File" > "$FILE"
              echo "This file was added $(date +"%b %d, %Y")" >> "$FILE"
              echo "" >> "$FILE"
              echo "Just for fun and keeping my daily git commit active ðŸ¤ª" >> "$FILE"
              echo "" >> "$FILE"
              echo "commit number: 1" >> "$FILE"
            else
              echo "File exists. Updating commit number..."
              CURRENT_COUNT=$(grep -oP 'commit number: \K\d+' "$FILE" || echo "0")
              echo "Current commit number: $CURRENT_COUNT"
              NEXT_COUNT=$((CURRENT_COUNT + 1))
              sed -i "/commit number: /c\commit number: $NEXT_COUNT" "$FILE"
              echo "Updated commit number to: $NEXT_COUNT"
            fi

            echo "Contents of the file:"
            cat "$FILE"

            echo "Staging changes..."
            git add "$FILE"

            echo "Committing changes..."
            git commit -m "Auto commit: updated commit number $NEXT_COUNT" --allow-empty

            echo "Forcing pull to avoid conflicts..."
            git fetch origin main
            git reset --hard origin/main  # Ensures we're always in sync

            echo "Pushing changes..."
            git push

            echo "Sleeping for 5 seconds before next commit..."
            sleep 5
          done

          echo "All commits completed successfully!"
        shell: bash
        env:
          USERNAME: ${{ secrets.USERNAME }}
          EMAIL: ${{ secrets.EMAIL }}
